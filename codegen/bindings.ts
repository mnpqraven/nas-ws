// This file has been generated by Specta. DO NOT EDIT.

export type ChallengeData = { maze_group_id: number; maze_group_index: number; pre_maze_group_index: number }

export type Avatar = { id: string; name: string; icon: AssetPath }

export type RelicSet = { id: string; name: string; icon: AssetPath; num: number; desc: string; properties: RelicSetProperty[] }

export type SubAffix = { type: string; field: string; name: string; icon: AssetPath; value: number; display: string; percent: boolean; count: number; step: number }

export type AttributeProperty = { type: string; field: string; name: string; icon: AssetPath; value: number; display: string; percent: boolean }

export type Player = { uid: string; nickname: string; level: number; world_level: number; friend_count: number; avatar: Avatar; signature: string; is_display: boolean; space_info: SpaceInfo }

export type Attribute = { field: string; name: string; icon: AssetPath; value: number; display: string; percent: boolean }

export type AssetPath = string

export type Element = "Fire" | "Ice" | "Physical" | "Wind" | "Lightning" | "Quantum" | "Imaginary"

export type Character = { id: string; name: string; rarity: number; rank: number; level: number; promotion: number; icon: AssetPath; preview: AssetPath; portrait: AssetPath; rank_icons: AssetPath[]; path: CharacterPath; element: CharacterElement; skills: Skill[]; skill_trees: SkillTree[]; light_cone: LightCone; relics: Relic[]; relic_sets: RelicSet[]; attributes: Attribute[]; additions: Attribute[]; properties: AttributeProperty[] }

export type MainAffix = { type: string; field: string; name: string; icon: AssetPath; value: number; display: string; percent: boolean }

export type CharacterPath = { id: string; name: string; icon: AssetPath }

export type LightConeProperty = { type: string; field: string; name: string; icon: AssetPath; value: number; display: string; percent: boolean }

export type RelicSetProperty = { type: string; field: string; name: string; icon: AssetPath; value: number; display: string; percent: boolean }

export type MihoResponse = { player: Player; characters: Character[] }

export type Skill = { id: string; name: string; level: number; max_level: number; element: CharacterElement | null; type: string; type_text: string; effect: string; effect_text: string; simple_desc: string; desc: string; icon: AssetPath }

export type LightConeAttribute = { field: string; name: string; icon: AssetPath; value: number; display: string; percent: boolean }

export type SkillTree = { id: string; level: number; icon: AssetPath }

export type CharacterElement = { id: string; name: Element; color: string; icon: AssetPath }

export type SpaceInfo = { challenge_data: ChallengeData; pass_area_progress: number; light_cone_count: number; avatar_count: number; achievement_count: number }

export type Relic = { id: string; name: string; set_id: string; set_name: string; rarity: number; level: number; icon: AssetPath; main_affix: MainAffix; sub_affix: SubAffix[] }

export type LightCone = { id: string; name: string; rarity: number; rank: number; level: number; promotion: number; icon: AssetPath; preview: AssetPath; portrait: AssetPath; path: CharacterPath; attributes: LightConeAttribute[]; properties: LightConeProperty[] }

